<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
http://www.springframework.org/schema/jdbc
http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/util
http://www.springframework.org/schema/util/spring-util.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- <jdbc:embedded-database id="dataSource" type="H2"> <jdbc:script location="classpath:META-INF/sql/schema.sql" 
		/> <jdbc:script location="classpath:META-INF/sql/test-data.sql" /> </jdbc:embedded-database> -->

	<bean name="serviceExporter"
		class="org.springframework.remoting.httpinvoker.
		HttpInvokerServiceExporter">
		<property name="service" ref="springService" />
		<property name="serviceInterface" value="org.pack.services.SpringService" />
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}"
		p:username="${jdbc.username}" p:password="${jdbc.password}" />

	<bean id="methodInterceptor"
		class="org.pack.ch9.spring.transactions.hibernate.home.SerializationInterceptor"></bean>

	<context:property-placeholder
		location="classpath:META-INF/properties/jdbc-mysql-orm.properties" />

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />

	<!-- Alternative approach for enabling spring transactions, default mode 
		is proxy -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->

	<bean id="springTxContactService"
		class="org.pack.ch9.spring.transactions.hibernate.home.ContactService"
		p:contactDAO-ref="contactDAO"></bean>

	<bean id="contactDAO"
		class="org.pack.ch9.spring.transactions.hibernate.home.ContactDAO"
		p:sessionFactory-ref="sessionFactory"></bean>

	<!-- Following is used when you want spring to find the beans -->
	<!-- <context:component-scan base-package="org.pack.ch9.spring.transactions.hibernate.home" 
		/> -->

	<!-- TODO: need to investigate why the following doesn't work -->
	<!-- expression="execution(* org.pack.ch9.spring.transactions.hibernate.home.ContactService.*(..)) 
		and execution(* org.pack.ch9.spring.transactions.hibernate.home.ContactDAO.*(..))" -->

	<aop:config>
		<aop:pointcut
			expression="execution(* org.pack.ch9.spring.transactions.hibernate.home.Contact*.*(..))"
			id="seriliazerInterceptor" />
		<aop:advisor pointcut-ref="seriliazerInterceptor"
			advice-ref="methodInterceptor" />
	</aop:config>

	<aop:config>
		<aop:pointcut
			expression="execution(* org.pack.ch9.spring.transactions.hibernate.home.Contact*.*(..))"
			id="saveUpdateOperation" />
		<aop:advisor pointcut-ref="saveUpdateOperation"
			advice-ref="saveUpdateAdvice" />
	</aop:config>

	<tx:advice id="saveUpdateAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="update*" propagation="REQUIRES_NEW"
				isolation="DEFAULT" rollback-for="Exception" />
			<tx:method name="save*" propagation="REQUIRED" isolation="DEFAULT"
				rollback-for="Exception" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>


	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource" p:packagesToScan="org.pack.ch9.spring.transactions.hibernate.home"
		p:hibernateProperties-ref="hibernateProperties" />

	<util:properties id="hibernateProperties">
		<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
		<prop key="hibernate.max_fetch_depth">3</prop>
		<prop key="hibernate.jdbc.fetch_size">50</prop>
		<prop key="hibernate.jdbc.batch_size">10</prop>
		<prop key="hibernate.show_sql">true</prop>
	</util:properties>

</beans>